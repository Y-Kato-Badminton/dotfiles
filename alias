#!/usr/local/bin/zsh
rcpath="$HOME/go/src/github.com/kpango/dotfiles"

alias docker="DOCKER_BUILDKIT=1 sudo docker"

alias dockerrm="docker container stop $(docker container ls -aq);docker ps -aq | xargs docker rm -f;docker container prune -f;docker images -aq | xargs docker rmi -f;docker image prune -a;docker volume prune -f;docker network prune -f;docker system prune -a"

container_name="dev"

alias kpbuild="cd $rcpath&&docker build --pull=true --file=$rcpath/Dockerfile -t kpango/dev:latest $rcpath"

alias kpmove="cd $rcpath"

function devrun(){
    privileged=true
    tz_path="/usr/share/zoneinfo/Japan"
    linux_docker_daemon=""
    case "$(uname -s)" in
        Darwin)
            echo 'Docker on macOS start'
            ;;

        Linux)
            echo 'Docker on Linux start'
            privileged=false
            tz_path="/etc/timezone"
            linux_docker_daemon="-v /etc/docker/daemon.json:/etc/docker/daemon.json"
            ;;

        CYGWIN*|MINGW32*|MSYS*)
            echo 'MS Windows is not ready for this environment'
            ;;

        *)
            echo 'other OS'
            ;;
    esac

    sudo docker run --network host --cap-add=ALL --name $container_name --restart always \
        --privileged=$privileged \
        -v /var/run/docker.sock:/var/run/docker.sock \
        $linux_docker_daemon \
        -v $HOME/.docker/daemon.json:/root/.docker/daemon.json \
        -v $HOME/.kube:/root/.kube \
        -v $HOME/.netrc:/root/.netrc \
        -v $HOME/.ssh:/root/.ssh \
        -v $HOME/.zsh_history:/root/.zsh_history \
        -v $HOME/Documents:/root/Documents \
        -v $HOME/Downloads:/root/Downloads \
        -v $HOME/go/src:/go/src:cached \
        -v $rcpath/init.vim:/root/.config/nvim/init.vim \
        -v $rcpath/tmux-kube:/root/.tmux-kube \
        -v $rcpath/tmux.conf:/root/.tmux.conf \
        -v $rcpath/zshrc:/root/.zshrc \
        -v $tz_path:/etc/timezone:ro \
        -dit kpango/dev:latest

    docker exec -d $container_name /usr/bin/nvim /tmp/main.go +GoInstallBinaries +qa
}

alias devrun="devrun"

alias devin="docker exec -it $container_name /bin/zsh"
alias devkill="docker update --restart=no $container_name && docker kill $(docker ps -a -q) && docker rm $(docker ps -a -q)"
alias devres="devkill && devrun"
