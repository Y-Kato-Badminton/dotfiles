#!/usr/bin/zsh
rcpath="$HOME/go/src/github.com/kpango/dotfiles"

dockerrm(){
    docker container stop $(docker container ls -aq)
    docker ps -aq | xargs docker rm -f
    docker container prune -f
    docker images -aq | xargs docker rmi -f;
    docker image prune -a
    docker volume prune -f
    docker network prune -f
    docker system prune -a
}

alias dockerrm="dockerrm"

zsh_path="/usr/bin/zsh"
container_name="dev"

alias kpmove="cd $rcpath"

alias kpbuild="kpmove&&docker build --pull=true --file=$rcpath/Dockerfile -t kpango/dev:latest $rcpath"

devrun(){
    port_range="8000-9300"
    privileged=true
    tz_path="/usr/share/zoneinfo/Japan"
    font_dir="/System/Library/Fonts"
    docker_daemon="$HOME/Library/Containers/com.docker.helper/Data/.docker/daemon.json"
    docker_config="$HOME/Library/Containers/com.docker.helper/Data/.docker/config.json"
    case "$(uname -s)" in
        Darwin)
            echo 'Docker on macOS start'
            # -e DISPLAY \
            # -v /tmp/.X11-unix:/tmp/.X11-unix \
            docker run \
                --cap-add=ALL \
                --name $container_name \
                --restart always \
                --privileged=$privileged \
                -p $port_range:$port_range \
                -v $HOME/.config/gcloud:/root/.config/gcloud \
                -v $HOME/.docker/daemon.json:/root/.docker/daemon.json \
                -v $HOME/.gnupg:/root/.gnupg \
                -v $HOME/.kube:/root/.kube \
                -v $HOME/.netrc:/root/.netrc \
                -v $HOME/.ssh:/root/.ssh \
                -v $HOME/.zsh_history:/root/.zsh_history \
                -v $HOME/Documents:/root/Documents \
                -v $HOME/Downloads:/root/Downloads \
                -v $HOME/go/src:/go/src:cached \
                -v $docker_config:/etc/docker/config.json \
                -v $docker_daemon:/etc/docker/daemon.json \
                -v $font_dir:/usr/share/fonts:ro \
                -v $rcpath/arch/limits.conf:/etc/security/limits.conf \
                -v $rcpath/coc-settings.json:/root/.config/nvim/coc-settings.json \
                -v $rcpath/editorconfig:/root/.editorconfig \
                -v $rcpath/efm-lsp-conf.yaml:/root/.config/nvim/efm-lsp-conf.yaml \
                -v $rcpath/gitattributes:/root/.gitattributes \
                -v $rcpath/gitconfig:/root/.gitconfig \
                -v $rcpath/gitignore:/root/.gitignore \
                -v $rcpath/go.vim:/root/.config/nvim/syntax/go.vim \
                -v $rcpath/init.vim:/root/.config/nvim/init.vim \
                -v $rcpath/monokai.vim:/root/.config/nvim/colors/monokai.vim \
                -v $rcpath/network/sysctl.conf:/etc/sysctl.conf \
                -v $rcpath/starship.toml:/root/.config/starship.toml \
                -v $rcpath/tmux-kube:/root/.tmux-kube \
                -v $rcpath/tmux.conf:/root/.tmux.conf \
                -v $rcpath/vintrc.yaml:/root/.vintrc.yaml \
                -v $rcpath/zshrc:/root/.zshrc \
                -v $tz_path:/etc/localtime:ro \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -dit kpango/dev:latest
                # -v $rcpath/tabnine_config.json:/root/.config/TabNine/tabnine_config.json \
            ;;

        Linux)
            echo 'Docker on Linux start'
            # privileged=false
            # privileged=false
            font_dir="/usr/share/fonts"
            tz_path="/etc/localtime"
            docker_daemon="/etc/docker/daemon.json"
            docker_config="/etc/docker/config.json"
            # -e DISPLAY \
            # -v /tmp/.X11-unix:/tmp/.X11-unix \
            docker run \
                --network=host \
                --cap-add=ALL \
                --name $container_name \
                --restart always \
                --privileged=$privileged \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v $docker_daemon:/etc/docker/daemon.json \
                -v $docker_config:/etc/docker/config.json \
                -v $HOME/.config/gcloud:/root/.config/gcloud \
                -v $HOME/.netrc:/root/.netrc:ro \
                -v $HOME/.docker/daemon.json:/root/.docker/daemon.json \
                -v $HOME/.gnupg:/root/.gnupg \
                -v $HOME/.kube:/root/.kube \
                -v $HOME/.ssh:/root/.ssh \
                -v $HOME/.zsh_history:/root/.zsh_history \
                -v $HOME/.tig_history:/root/.tig_history \
                -v $HOME/Documents:/root/Documents \
                -v $HOME/Downloads:/root/Downloads \
                -v $HOME/go/src:/go/src:cached \
                -v $rcpath/network/sysctl.conf:/etc/sysctl.conf \
                -v $rcpath/arch/limits.conf:/etc/security/limits.conf \
                -v $rcpath/coc-settings.json:/root/.config/nvim/coc-settings.json \
                -v $rcpath/editorconfig:/root/.editorconfig \
                -v $rcpath/efm-lsp-conf.yaml:/root/.config/nvim/efm-lsp-conf.yaml \
                -v $rcpath/gitattributes:/root/.gitattributes \
                -v $rcpath/gitconfig:/root/.gitconfig \
                -v $rcpath/gitignore:/root/.gitignore \
                -v $rcpath/go.vim:/root/.config/nvim/syntax/go.vim \
                -v $rcpath/init.vim:/root/.config/nvim/init.vim \
                -v $rcpath/monokai.vim:/root/.config/nvim/colors/monokai.vim \
                -v $rcpath/starship.toml:/root/.config/starship.toml \
                -v $rcpath/tmux-kube:/root/.tmux-kube \
                -v $rcpath/tmux.conf:/root/.tmux.conf \
                -v $rcpath/vintrc.yaml:/root/.vintrc.yaml \
                -v $rcpath/zshrc:/root/.zshrc \
                -v $font_dir:/usr/share/fonts:ro \
                -v $tz_path:/etc/localtime:ro \
                -dit kpango/dev:latest
                # -v $rcpath/tabnine_config.json:/root/.config/TabNine/tabnine_config.json \
                # -dit kpango/dev:latest $zsh_path -c "tmux -2 new-session -nroot -sroot@$HOST"
            ;;

        CYGWIN*|MINGW32*|MSYS*)
            echo 'MS Windows is not ready for this environment'
            ;;

        *)
            echo 'other OS'
            ;;
    esac

    docker exec -d $container_name $zsh_path nvup
}

alias devrun="devrun"

alias devin="docker exec -it $container_name $zsh_path -c \"tmux -q has-session && exec tmux -2 attach-session -d || exec tmux -2 new-session -nroot -sroot@$HOST\""
# alias devin="docker exec -it $container_name $zsh_path -c \"tmux -q has-session && exec tmux -2 attach-session -d || exec tmux -2 new-session -nroot -sroot@$HOST\""
# alias devin="docker exec -it $container_name $zsh_path"

devkill(){
    docker update --restart=no $container_name \
        && docker container stop $(docker container ls -aq) \
        && docker container stop $(docker ps -a -q) \
        && docker ps -aq | xargs docker rm -f \
        && docker container prune -f
}

alias devkill="devkill"

alias devres="devkill && devrun"
